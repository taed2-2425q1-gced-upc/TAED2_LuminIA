[project]
name = "taed2_luminia"
version = "0.0.1"
description = "Traffic signs detection using YOLOv8"
authors = [
  { name = "LuminIA" },
]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License"
]
requires-python = "~=3.10"

[tool.black]
line-length = 99
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
)/
'''

[tool.ruff.lint.isort]
known_first_party = ["taed2_luminia"]
force_sort_within_sections = true

[tool.poetry]
name = "taed2-luminia"
version = "0.1.0"
description = "Traffic signs detection using YOLOv8"
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
numpy = "^1.21"
pandas = "^1.3"
scipy = "^1.10"  # Cambia a una versión que no requiera compilación
scikit-learn = "^1.3.0"
dvc = "^3.55.2"
ultralytics = "^8.3.6"
mlflow = "^2.16.2"
codecarbon = "^2.7.1"
python-dotenv = "^1.0.1"
loguru = "^0.7.2"
deepchecks = {extras = ["vision"], version = "^0.18.1"}




[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
pylint = "^3.2.7"
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"




[tool.coverage.run]
omit = ["src/prepare.py", "src/evaluate.py", "src/train.py", "src/train_api_demo_models.py"]

[tool.pytest.ini_options]
pythonpath = "."
testpaths = "tests"
addopts = "--junitxml=out/tests-report.xml --cov=src --cov-report=html:reports/coverage"